#lang racket
(struct Piece [name isWhite sprite])
(define emptyCell 'null)
(define boardVector
  (vector-immutable 
  (vector-immutable (Piece "rook" #f) (Piece "knight" #f) (Piece "bishop" #f) (Piece "king" #f) (Piece "king" #f) (Piece "bishop" #f) (Piece "knight" #f) (Piece "rook" #f))
  (vector-immutable (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f))
  (vector-immutable emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell)
  (vector-immutable emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell)
  (vector-immutable emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell)
  (vector-immutable emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell)
  (vector-immutable (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f) (Piece "pawn" #f))
  (vector-immutable (Piece "rook" #f) (Piece "knight" #f) (Piece "bishop" #f) (Piece "king" #f) (Piece "king" #f) (Piece "bishop" #f) (Piece "knight" #f) (Piece "rook" #f))
  ))