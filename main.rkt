#lang racket
(require "sprites.rkt")

(struct Piece [name isWhite sprite moved?])
(define emptyCell 'null)


(define boardVector
  (vector-immutable 
  (vector-immutable (Piece "rook" #f BLACK-ROOK #f) (Piece "knight" #f BLACK-KNIGHT #f) (Piece "bishop" #f BLACK-BISHOP #f) (Piece "queen" #f BLACK-QUEEN #f) (Piece "king" #f BLACK-KING #f) (Piece "bishop" #f BLACK-BISHOP #f) (Piece "knight" #f BLACK-KNIGHT #f) (Piece "rook" #f BLACK-ROOK #f))
  (vector-immutable (Piece "pawn" #f BLACK-PAWN #f) (Piece "pawn" #f BLACK-PAWN #f) (Piece "pawn" #f BLACK-PAWN #f) (Piece "pawn" #f BLACK-PAWN #f) (Piece "pawn" #f BLACK-PAWN #f) (Piece "pawn" #f BLACK-PAWN #f) (Piece "pawn" #f BLACK-PAWN #f) (Piece "pawn" #f BLACK-PAWN #f))
  (vector-immutable emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell)
  (vector-immutable emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell)
  (vector-immutable emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell)
  (vector-immutable emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell emptyCell)
  (vector-immutable (Piece "pawn" #t WHITE-PAWN #f) (Piece "pawn" #t WHITE-PAWN #f) (Piece "pawn" #t WHITE-PAWN #f) (Piece "pawn" #t WHITE-PAWN #f) (Piece "pawn" #t WHITE-PAWN #f) (Piece "pawn" #t WHITE-PAWN #f) (Piece "pawn" #t WHITE-PAWN #f) (Piece "pawn" #t WHITE-PAWN #f))
  (vector-immutable (Piece "rook" #t WHITE-ROOK #f) (Piece "knight" #t WHITE-KNIGHT #f) (Piece "bishop" #t WHITE-BISHOP #f) (Piece "queen" #t WHITE-QUEEN #f) (Piece "king" #t WHITE-KING #f) (Piece "bishop" #t WHITE-BISHOP #f) (Piece "knight" #t WHITE-KNIGHT #f) (Piece "rook" #t WHITE-ROOK #f))
  ))
(struct WS[board firstClick firstCoord isWhiteTurn])
(define (set-board ws board)
  (WS board))
(define (set-name name piece)
  (Piece name (Piece-isWhite piece) (Piece-sprite piece) (Piece-moved? piece)))
(define (set-isWhite isWhite piece)
  (Piece (Piece-name piece) isWhite (Piece-sprite piece) (Piece-moved? piece)))
(define (set-sprite sprite piece)
  (Piece (Piece-name piece) (Piece-isWhite piece) sprite (Piece-moved? piece)))
(define (hasMoved move? piece)
  (Piece (Piece-name piece) (Piece-isWhite piece) (Piece-sprite piece) move?))
(provide Piece)
(provide Piece-name)
(provide Piece-isWhite)
(provide Piece-sprite)
(provide Piece-moved?)
(provide boardVector)
(provide WS)
(provide WS-board)
(provide WS-firstClick)
(provide WS-firstCoord)
(provide WS-isWhiteTurn)
(provide set-board)
(provide set-name)
(provide set-isWhite)
(provide set-sprite)
(provide hasMoved)

